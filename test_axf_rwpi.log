
========================================================================

** ELF Header Information

    File Name: test.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00008041
    Flags: EF_ARM_HASENTRY (0x05000002)

    ARM ELF revision: 5 (ABI version 2)

    Built with
    Component: ARM Compiler 5.05 (build 41) Tool: armcc [4d0eb9]
    Component: ARM Compiler 5.05 (build 41) Tool: armlink [4d0eb9]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 15

    Program header offset: 4660 (0x00001234)
    Section header offset: 4692 (0x00001254)

    Section header string table index: 14

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_SB + PF_ARM_ENTRY]
    Size : 240 bytes (112 bytes in file)
    Virtual address: 0x00008000 (Alignment 4)


========================================================================

** Section #1 'ER_RO' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 100 bytes (alignment 4)
    Address: 0x00008000

    $t
    .text
    ml_func
        0x00008000:    4a0c        .J      LDR      r2,[pc,#48] ; [0x8034] = 0xc
        0x00008002:    4b0d        .K      LDR      r3,[pc,#52] ; [0x8038] = 0x4
        0x00008004:    444a        JD      ADD      r2,r2,r9
        0x00008006:    444b        KD      ADD      r3,r3,r9
        0x00008008:    6812        .h      LDR      r2,[r2,#0]
        0x0000800a:    681b        .h      LDR      r3,[r3,#0]
        0x0000800c:    4408        .D      ADD      r0,r0,r1
        0x0000800e:    441a        .D      ADD      r2,r2,r3
        0x00008010:    4410        .D      ADD      r0,r0,r2
        0x00008012:    4770        pG      BX       lr
    ml_func2
        0x00008014:    4908        .I      LDR      r1,[pc,#32] ; [0x8038] = 0x4
        0x00008016:    4807        .H      LDR      r0,[pc,#28] ; [0x8034] = 0xc
        0x00008018:    4449        ID      ADD      r1,r1,r9
        0x0000801a:    4448        HD      ADD      r0,r0,r9
        0x0000801c:    6809        .h      LDR      r1,[r1,#0]
        0x0000801e:    4a07        .J      LDR      r2,[pc,#28] ; [0x803c] = 0xdeadbeaf
        0x00008020:    6800        .h      LDR      r0,[r0,#0]
        0x00008022:    4411        .D      ADD      r1,r1,r2
        0x00008024:    4408        .D      ADD      r0,r0,r1
        0x00008026:    4770        pG      BX       lr
    ml_func3
        0x00008028:    4a02        .J      LDR      r2,[pc,#8] ; [0x8034] = 0xc
        0x0000802a:    444a        JD      ADD      r2,r2,r9
        0x0000802c:    f8421020    B. .    STR      r1,[r2,r0,LSL #2]
        0x00008030:    e7f0        ..      B        ml_func2 ; 0x8014
    $d
        0x00008032:    0000        ..      DCW    0
        0x00008034:    0000000c    ....    DCD    12
        0x00008038:    00000004    ....    DCD    4
        0x0000803c:    deadbeaf    ....    DCD    3735928495
    $t
    .text
    ml_func4
        0x00008040:    4804        .H      LDR      r0,[pc,#16] ; [0x8054] = 0x4
        0x00008042:    4a06        .J      LDR      r2,[pc,#24] ; [0x805c] = 0x8
        0x00008044:    4448        HD      ADD      r0,r0,r9
        0x00008046:    444a        JD      ADD      r2,r2,r9
        0x00008048:    6801        .h      LDR      r1,[r0,#0]
        0x0000804a:    4803        .H      LDR      r0,[pc,#12] ; [0x8058] = 0x8060
        0x0000804c:    6812        .h      LDR      r2,[r2,#0]
        0x0000804e:    6800        .h      LDR      r0,[r0,#0]
        0x00008050:    4710        .G      BX       r2
    $d
        0x00008052:    0000        ..      DCW    0
        0x00008054:    00000004    ....    DCD    4
        0x00008058:    00008060    `...    DCD    32864
        0x0000805c:    00000008    ....    DCD    8
    $d.realdata
    .constdata
    myconst
        0x00008060:    deadbeaf    ....    DCD    3735928495

** Section #2 'ER_RW' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 12 bytes (alignment 4)
    Address: 0x00000000

    0x000000:   00 00 00 00 2a 00 00 00 01 80 00 00                ....*.......


** Section #3 'ER_ZI' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 128 bytes (alignment 4)
    Address: 0x0000000c


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1444 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 364 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 988 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 144 bytes


** Section #8 '.debug_loc' (SHT_PROGBITS)
    Size   : 156 bytes


** Section #9 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 201 bytes


** Section #10 '.symtab' (SHT_SYMTAB)
    Size   : 400 bytes (alignment 4)
    String table #11 '.strtab'
    Last local symbol no. 15


** Section #11 '.strtab' (SHT_STRTAB)
    Size   : 296 bytes


** Section #12 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #13 '.comment' (SHT_PROGBITS)
    Size   : 332 bytes


** Section #14 '.shstrtab' (SHT_STRTAB)
    Size   : 140 bytes


